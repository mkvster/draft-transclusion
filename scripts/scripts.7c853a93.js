"use strict";angular.module("draftTransclusionApp",[]),angular.module("draftTransclusionApp").controller("MainCtrl",["$scope",function(a){a.vm={},a.vm.testModel=[{id:1,name:"HTML",badge:15},{id:2,name:"JavaScript",badge:12},{id:3,name:"CSS",badge:10},{id:4,name:"AngularJS",badge:2}],a.vm.text="TEST",a.getTestModel=function(){var b=angular.toJson(a.vm.testModel);return b}}]),angular.module("draftTransclusionApp").directive("tstCtrl",["$compile",function(a){return{restrict:"E",transclude:!0,scope:{tstModel:"="},controller:["$scope",function(b){b.tstParentScope=b.$parent;var c='<ul class="list-group"><li class="list-group-item" ng-repeat="tstElem in tstElem.children"><div tst-ctrl-trans></div></li></ul>';this.render=a(c)}],compile:function(a,b,c){return function(a,b,d,e){a.$watch("tstModel",function(b){if(angular.isArray(b)){if(angular.isDefined(a.tstElem)&&angular.equals(a.tstElem.children,b))return;a.tstElem={},a.tstElem.children=b}else{if(angular.equals(a.tstElem,b))return;a.tstElem=b}console.log(a)}),e.render(a,function(a){b.html("").append(a)}),a.$tstTranscludeFn=c}}}}]),angular.module("draftTransclusionApp").directive("tstCtrlTrans",function(){return{controller:["$scope",function(a){}],link:function(a,b,c){a.transcludeScope=a.tstParentScope.$new(),a.transcludeScope.tstElem=a.tstElem,a.$on("$destroy",function(){a.transcludeScope.$destroy()}),a.$tstTranscludeFn(a.transcludeScope,function(a){b.empty(),b.append(a)}),console.log(a)}}}),angular.module("draftTransclusionApp").run(["$templateCache",function(a){a.put("views/main.html",'<section> <div class="page-header"> <h1>Parameters</h1> </div> <label>Model: </label> <div class="well well-sm"> <code>{{getTestModel()}}</code> </div> <label>Text: </label> <input class="form-control" ng-model="vm.text"> </section> <section> <div class="page-header"> <h1>Result</h1> </div> <tst-ctrl tst-model="vm.testModel"> This is {{tstElem.id}} : {{tstElem.name}} {{vm.text}} <span class="badge pull-right">{{tstElem.badge}}</span> </tst-ctrl> </section>')}]);